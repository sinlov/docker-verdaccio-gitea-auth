name: ci

on:
  push:
    paths-ignore:
      - '**/README.md'
    branches:
      # - 'main'
      - 'release-*'
      - 'FE-*'
      - '*-feature-*'
      - 'BF-*'
      - '*-bug-*'
      - 'PU-*'
      - 'DOC-*'
      - '*-documentation-*'
      - '*-hotfix-*'
      - 'fix-*'
    tags:
      - '*' # Push events to matching *, i.e. 1.0.0 v1.0, v20.15.10
  pull_request:
    paths-ignore:
      - '**/README.md'
    types: # https://docs.github.com/actions/using-workflows/events-that-trigger-workflows#pull_request
      - opened
      - reopened
      - closed
    # branches:
    #   - 'main'
    #   - 'release-*'
    #   - 'DOC-*'
    #   - 'hotfix-*'

permissions: # https://docs.github.com/actions/using-workflows/workflow-syntax-for-github-actions#permissions
  contents: write
  discussions: write
  packages: write

jobs:
  version:
    name: version
    uses: ./.github/workflows/version.yml

  docker-bake-basic-all-latest:
    name: docker-bake-basic-all-latest
    needs:
      - version
    uses: ./.github/workflows/docker-buildx-bake-hubdocker-latest.yml
    if: ${{ github.ref_type != 'tag' }}
    with:
      # push_remote_flag: ${{ github.ref == 'refs/heads/main' }}
      push_remote_flag: ${{ github.event.pull_request.merged == true }}
      docker_bake_targets: 'image-basic'
    secrets:
      DOCKERHUB_TOKEN: "${{ secrets.DOCKERHUB_TOKEN }}"

  ### deploy tag start

  docker-bake-basic-all-tag:
    name: docker-bake-basic-all-tag
    needs:
      - version
    uses: ./.github/workflows/docker-buildx-bake-hubdocker-tag.yml
    if: startsWith(github.ref, 'refs/tags/')
    with:
      docker_bake_targets: 'image-basic'
      docker-metadata-flavor-suffix: '' # default is '', can add as: -alpine -debian
      # push_remote_flag: true # default is true
    secrets:
      DOCKERHUB_TOKEN: "${{ secrets.DOCKERHUB_TOKEN }}"

  deploy-tag:
    needs:
      - version
      - docker-bake-basic-all-tag
    name: deploy-tag
    uses: ./.github/workflows/deploy-tag.yml
    if: startsWith(github.ref, 'refs/tags/')
    secrets: inherit
    with:
      prerelease: true
      tag_name: ${{ needs.version.outputs.tag_name }}
      tag_changes: ${{ needs.version.outputs.cc_changes }}
      # download_artifact_name: foo-release # download artifact name, download from actions/upload-artifact, as: {download_artifact_name}-{tag_name}-*, empty is not download

 ### deploy tag end